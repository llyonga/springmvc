<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<description>spring MVC Configuration</description>

	<!-- 注解的映射器 -->
	<!--<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/> -->
	<!-- 注解的适配器 -->
	<!--<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"/> -->
	<!-- 使用mvc:annotation-driven代替上面两个注解映射器和注解适配的配置 mvc:annotation-driven默认加载很多的参数绑定方法， 
		比如json转换解析器默认加载了，如果使用mvc:annotation-driven则不用配置上面的RequestMappingHandlerMapping和RequestMappingHandlerAdapter 
		实际开发时使用mvc:annotation-driven -->
	<!-- 默认的注解映射的支持 配置mvc:resources...前要加上下面配置，否则servelet解析失败 -->
	<mvc:annotation-driven></mvc:annotation-driven>

	<!-- 完成请求和注解POJO的映射 -->
	<!-- <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" /> -->

	<!-- 配置扫描的包,使用Annotation自动注册Bean,只扫描@Controller -->
	<context:component-scan base-package="com.io.ssm" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- 配置视图解析 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/view/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 对静态资源文件的访问 方案一 （二选一） -->
	<!-- <mvc:default-servlet-handler/> -->

	<!-- 对静态资源文件的访问 方案二 （二选一） -->
	<mvc:resources mapping="/static/img/**" location="/static/img/" cache-period="31536000"/>
	<mvc:resources mapping="/static/js/**" location="/static/js/" cache-period="31536000"/>
	<mvc:resources mapping="/static/i/**" location="/static/i/" cache-period="31536000"/>
	<mvc:resources mapping="/static/fonts/**" location="/static/fonts/" cache-period="31536000"/>
	<mvc:resources mapping="/static/css/**" location="/static/css/" cache-period="31536000"/>
	<mvc:resources mapping="/static/html/**" location="/static/html/" cache-period="31536000"/>
	<mvc:resources mapping="/**/*.html" location="/" cache-period="31536000"/>
	<mvc:resources mapping="/WEB-INF/**" location="/WEB-INF/" cache-period="31536000"/>

	<!-- 返回json 方法一 需要导入 fastjson.jar包 -->
	<!-- <mvc:annotation-driven>
		<mvc:message-converters register-defaults="false">
			避免IE执行AJAX时,返回JSON出现下载文件
			<bean id="fastJsonHttpMessageConverter"
				class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						这里顺序不能反，一定先写text/html,不然ie下出现下载提示
						<value>text/html;charset=UTF-8</value>
						<value>application/json;charset=UTF-8</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven> -->


	<!-- 返回json 方法二 需要导入 jackson-annotations.jar,jackson-core.jar,jackson-databind.jar -->
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" />
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean class="org.springframework.http.converter.StringHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/html; charset=UTF-8</value>
							<value>application/json;charset=UTF-8</value>
						</list>
					</property>
				</bean>
				<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/html; charset=UTF-8</value>
							<value>application/json;charset=UTF-8</value>
						</list>
					</property>
				</bean>
			</list>
		</property>
	</bean>
	
	<!-- 支持上传文件 -->  
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" >  
        <!-- 100M -->  
        <property name="maxUploadSize" value="104857600"></property>      
        <property name="defaultEncoding" value="utf-8"></property>     
    </bean>  

</beans>